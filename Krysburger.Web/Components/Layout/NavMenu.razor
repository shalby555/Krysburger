@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims

<AuthorizeView>
    <Authorized>
    <div class="top-row ps-3 navbar navbar-dark">
        <div class="container-fluid">
            <h3>@claims[1].Value</h3>
            <h4>@claims[2].Value</h4>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Logout">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Logout
            </NavLink>
        </div>
    </div>

    <input type="checkbox" title="Navigation menu" class="navbar-toggler" />

    <div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
        <nav class="flex-column">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    Home
                </NavLink>
            </div>
        </nav>
    </div>

    </Authorized>
    <NotAuthorized>
        <h1>Не регнул</h1>
    </NotAuthorized>
</AuthorizeView>

@code
{
    [CascadingParameter]
    public Task<AuthenticationState> State { get; set; }

    private List<Claim> claims = new List<Claim>();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var authState = await State;
        var user = authState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            claims = user.Claims.ToList();
        }
    }
}