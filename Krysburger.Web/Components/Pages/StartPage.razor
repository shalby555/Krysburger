@using Krysburger.Core.InputModels
@using Krysburger.BLL
@using Krysburger.Core
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Forms
@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies

@page "/start-page"
@inject NavigationManager navManager

<link rel="stylesheet" href="StartPage.css" />
<div class="header1">
    <h1>Добро пожаловать!!!!</h1>
</div>
<EditForm Model="@loginModel" OnSubmit="Login" FormName="Login">
    <DataAnnotationsValidator />
    <div class="header1">
        <ValidationSummary />
    </div>
        <div class="div-3">
            <h5>Логин</h5>
        <InputText @bind-Value="loginModel.Login" />
        </div>
        <div class="div-3">
            <h5>Пароль</h5>
        <InputText type="password" @bind-Value="loginModel.Password" />
        </div>
        <div class="div-3">
            <button type="submit">
                VHOD</button>
        </div>
</EditForm>

@code {
    [SupplyParameterFromForm]
    public UserInputModel loginModel { get; set; } = new();

    [CascadingParameter]
    public HttpContext httpContext { get; set; }

    UsersManager userManager = new();

    string url = "/start-page";

    public async Task Login()
    {
        var user = userManager.UserLogin(loginModel);

        if (user is not null)
        {
            var claims = new List<Claim>()
            {
                new Claim("id", user.Id.ToString()),
                new Claim("login", user.Login),
                new Claim(ClaimTypes.Role, user.Role)
            };

            var identity = new ClaimsIdentity(claims, CookieAuthenticationDefaults.AuthenticationScheme);
            var pr = new ClaimsPrincipal(identity);
            await httpContext.SignInAsync(pr);

            ChangeUrlByRole(user);
        }

        navManager.NavigateTo(url, true);
    }

    private void ChangeUrlByRole(UserOutputModel user)
    {
        switch(user.Role)
        {
            case "waiter":
                url = Urls.WaiterStartPage;
                break;

            case "admin":
                url = Urls.AdminStartPage;
                break;

            case "chef":
                url = Urls.ChefStartPage;
                break;

            case "logist":
                url = Urls.LogistStartPage;
                break;
        }
    }
}